#jVSTwRapper configuration
#*******************************************************************

# Please NOTE: Rename the jVSTwRapper.dll to the name of your .ini file. 
# Only if you do this the wrapper will be initialised correctly and your 
# plugin will work. You can choose any valid filename for that (This name 
# will also be your plugin name in the audio app). Make sure, that the .dll and 
# the .ini file both have the same name (without the file extension).




# This section descibes the java classes which implement your plugin.
# USE "/ notation" (e.g java/lang/String) and fully 
# qualified class names

# this config value is MANDATORY!
# ******************************************************************
#PluginClass=jvst/examples/jayvstxsynth/JayVSTxSynth
PluginClass=org/jvaptools/scripteffect/vstmain
#PluginClass=jvst/examples/dreinulldrei/DreiNullDrei


# If your Plug doesnt have a custom user interface (UI), simply comment out
# the following line (prefix it with a #)

# this config value is OPTIONAL!
# ******************************************************************
#PluginUIClass=jvst/examples/jayvstxsynth/JayVSTxSynthGUI
PluginUIClass=org/jvaptools/scripteffect/vstgui
#PluginUIClass=jvst/examples/dreinulldrei/DreiNullDreiGUI //NOT implemented yet!


# Heres your ClassPath for your plugin. Please include all .jar files and 
# dont forget the jVSTwRapper_bin.jar
# Note: The directory where your plug is stored is added by default.
# Please use the {WrapperPath} variable here. It will be replaced with the 
# Path where your wrapper dll is located and makes it possible to use relative paths
# for the used jars.
 
# this config value is MANDATORY!
# ******************************************************************
ClassPath={WrapperPath}\jVSTwRapper_bin.jar;{WrapperPath}\scripteffect.jar;{WrapperPath}\janino.jar;{WrapperPath}\jvaptools.jar


# The libs here are added to the Bootstrap Classloader. Please dont modify any value 
# here. Especially, dont add your plug classes or the jVSTwRapper.jar. If you 
# do so, all native calls will be dispatched to just one library and will cause the JVM 
# to terminate if more than one plugin is used at the same time.

# this config value is MANDATORY!
# ******************************************************************
SystemClassPath={WrapperPath}\jVSTsYstem_bin.jar


# Set this value to 0 if you dont want the *_java_stdout.txt and *_log.txt to 
# be created.

# this config value is OPTIONAL!
# ******************************************************************
IsLoggingEnabled=0

# Set this value to 0 if there are display-errors or if your host crashes when 
# the plug starts its custom GUI. If set to 0, jVSTwRapper opens its own (java) window 
# for the custom GUI. This window is a top level window and therefore not integrated into 
# the host application (e.g. as mdi child). Most hosts open 2 windows now. One for the native GUI that 
# doesnt display anything, and another (top-level, java) window for the GUI. (Look at "CloseNativePluginWindow" 
# to tweak this behavior). If set to 1, jVSTwRapper tries to use the window opened by the host 
# to draw its custom GUI. This means your java plug totally looks like a native vst plugin. 

# this config value is OPTIONAL!
# ******************************************************************
AttachToNativePluginWindow=1


#*** THIS OPTION APPLIES ONLY IF AttachToNativePluginWindow=0 ***
# Set this value to 0 if your host crashes when the Wrapper starts displaying 
# a plugs custom GUI in its own top-level (java) window (REMEMBER: This happens only if AttachToNativePluginWindow=0).
# If this value is set to 0, the plugin window opened by the host will be left open. Most host display 2 windows 
# now, a native window for the plugin, and the top-level java window with the plugins GUI. 
# If set to 1, only the top-level java window will be displayed. The native one (provided by the host) will be 
# closed. Some hosts dont like this and crash. Set to 1 if your host is one of those...

# this config value is OPTIONAL!
# ******************************************************************
CloseNativePluginWindow=0


# You can specify custom JVM Startup options here.
# WARNING: providing ANY option, which is not recognized by your 
# JVM will cause it fail to start. So be sure to use a correct JVM Startup option here.

# these config values are OPTIONAL!
# Note: In order to use remote debugging on a 1.5 jVM enable the first Option and MAKE SURE
# that you use a free local TCP port.
# ******************************************************************
#JVMOption1=-agentlib:jdwp=transport=dt_socket,suspend=y,address=localhost:1268
#JVMOption2=-agentlib:hprof=cpu=samples,interval=20

 

#END of INI file
#Please do not remove comments