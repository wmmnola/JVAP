/*
 * PatternEditPanel.java
 *
 * Created on 18. Februar 2006, 10:07
 *
 * JVAPTools - Tools for rapid Java-VST Audio Plugin creation Copyright (C) 2006 Daniel Reinert
 * This library is free software; you can redistribute it and/or modify it under the terms of the
 * GNU Lesser General Public License as published by the Free Software Foundation; either version 2.1
 * of the License, or (at your option) any later version.
 *
 * This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY;
 * without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
 * See the GNU Lesser General Public License for more details.
 *
 * You should have received a copy of the GNU Lesser General Public License along with this library;
 * if not, write to the Free Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA 02111-1307 USA
 */

package org.jvaptools.PatternEditor;

/**
 *
 * @author  Daniel
 */
public class PatternEditPanel extends javax.swing.JPanel {
    
   PatternEditor e;
   javax.sound.midi.Sequence seq;
 
   javax.swing.JViewport j;
    
   public PatternEditPanel() {       
       this(emptySequence());       
   }
      
   public javax.sound.midi.Sequence getSequence()
   {
       return this.seq;
   }
   
   public static javax.sound.midi.Sequence emptySequence() {
       try {
           int resolution=480;
          javax.sound.midi.Sequence s= new javax.sound.midi.Sequence(javax.sound.midi.Sequence.PPQ,resolution, 1);
          javax.sound.midi.MetaMessage trackEnd=new javax.sound.midi.MetaMessage();
          s.getTracks()[0].add(new javax.sound.midi.MidiEvent(trackEnd, (int)(((float)resolution)*4.0)));          
          return s;
       } catch(Exception e) {e.printStackTrace(); }
       return null;
   }
   
    /** Creates new form PatternEditPanel */
    public PatternEditPanel(javax.sound.midi.Sequence seq) {
        this.border=new javax.swing.border.EmptyBorder(0,0,0,0);//javax.swing.UIManager.getBorder("ScrollPane.border");       
        initComponents();
        this.seq=seq;
         e=new PatternEditor(seq);
        EditorKeyboard k=new EditorKeyboard(e);
        EditorHeader h=new EditorHeader(e);
        e.setHeader(h);
        //e.setBackground(java.awt.Color.BLUE);
        this.PatternEditorScrollPane.setViewportView(e);
        this.PatternEditorScrollPane.setColumnHeaderView(h);
        this.PatternEditorScrollPane.setRowHeaderView(k);  
        
        EditorHeader h2=new EditorHeader(e);
        
        j=new javax.swing.JViewport();
        j.setView(h2);
        this.PatternEditorScrollPane.getViewport().addChangeListener(new javax.swing.event.ChangeListener(){
            public void stateChanged(javax.swing.event.ChangeEvent cevt){
                java.awt.Point p=PatternEditorScrollPane.getViewport().getViewPosition();
                p.y=0;
                j.setViewPosition(p);
            }
        }
        );
       // this.CurveEditorPane.setBorder(javax.swing.UIManager.getBorder("ScrollPane.border"));
       // System.out.println(this.CurveEditorPane.getBorder());
        this.CurveEditorLeft.setSize(k.getWidth(), this.CurveEditorPane.getHeight());//k.getWidth()
        this.CurveEditorLeft.setPreferredSize(new java.awt.Dimension(k.getWidth(), this.CurveEditorPane.getHeight()));
        this.CurveEditorRight.setSize(PatternEditorScrollPane.getVerticalScrollBar().getWidth(), this.CurveEditorPane.getHeight());
        this.CurveEditorRight.setPreferredSize(new java.awt.Dimension(PatternEditorScrollPane.getVerticalScrollBar().getPreferredSize().width, this.CurveEditorPane.getHeight()));
       // j.setSize(this.PatternEditorScrollPane.getViewport().getSize().width, this.CurveEditorPane.getHeight());
        this.CurveEditorPane.add(j, java.awt.BorderLayout.CENTER);
        this.setBorder(javax.swing.UIManager.getBorder("ScrollPane.border"));
    }
    
    javax.swing.border.Border border;
    
    public void updateUI()
    {
        super.updateUI();
        if(SplitPane!=null) {
        SplitPane.setBorder(border);
        PatternEditorScrollPane.setBorder(border);
        this.setBorder(javax.swing.UIManager.getBorder("ScrollPane.border"));
        }
    }
    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc=" Generated Code ">//GEN-BEGIN:initComponents
    private void initComponents() {
        SplitPane = new javax.swing.JSplitPane();
        PatternEditorScrollPane = new javax.swing.JScrollPane();
        CurveEditorPane = new javax.swing.JPanel();
        CurveEditorLeft = new javax.swing.JPanel();
        CurveEditorRight = new javax.swing.JPanel();

        setLayout(new java.awt.BorderLayout());

        SplitPane.setBorder(null);
        SplitPane.setOrientation(javax.swing.JSplitPane.VERTICAL_SPLIT);
        SplitPane.setResizeWeight(0.7);
        PatternEditorScrollPane.setBorder(null);
        SplitPane.setLeftComponent(PatternEditorScrollPane);

        CurveEditorPane.setLayout(new java.awt.BorderLayout());

        CurveEditorPane.add(CurveEditorLeft, java.awt.BorderLayout.WEST);

        CurveEditorPane.add(CurveEditorRight, java.awt.BorderLayout.EAST);

        SplitPane.setRightComponent(CurveEditorPane);

        add(SplitPane, java.awt.BorderLayout.CENTER);

    }
    // </editor-fold>//GEN-END:initComponents
    
    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel CurveEditorLeft;
    private javax.swing.JPanel CurveEditorPane;
    private javax.swing.JPanel CurveEditorRight;
    private javax.swing.JScrollPane PatternEditorScrollPane;
    private javax.swing.JSplitPane SplitPane;
    // End of variables declaration//GEN-END:variables
    
}
